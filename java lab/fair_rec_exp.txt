1) Prime or Not
Write a Java program to check whether a given number is prime or not.
2) Second Smallest Element in an Array
Write a Java program to find the second smallest element in an array.
 
3) Matrix Multiplication
Write a Java program to multiply two given matrices.
4) Transpose of a Matrix
Write a Java program to display the transpose of a given matrix.
5) Frequency of a given Character
Write a Java Program to find the frequency of a given character in a string.
6) Palindrome or Not
Write a Java program that checks whether a given string is a palindrome or not.
Ex: MALAYALAM is palindrome.
7) Method Overloading
Write a Java program to calculate the area of different shapes namely circle, rectangle and triangle
using the concept of method overloading.
8) Command Line Arguments
Write a Java program to display the features of Java(Simple, Object-Oriented, Distributed, Robust,
Secure, Portable, Multithreaded, Dynamic)in below format, by using command line arguments.
Ex:
1. Java is Simple
2. Java is Object-Oriented
3. Java is Distributed
4. Java is Robust
5. Java is Secure
6. Java is Portable
7. Java is Multithreaded
8.Java is Dynamic

9) Inheritance
Write two Java classes Employee and Engineer. Engineer should inherit from Employee class.
Employee class to have two methods display() and calcSalary().
Write a program to display the engineer salary and to display from Employee class using a single
object instantiation(i.e; only one object creation is allowed)

• display() only prints the name of the name of the class and does not return any value. Ex. &quot; Name of
class is Employee&quot;.
• calcSalary() in Employee displays &quot;Salary of employee is 10000&quot; and calcSalary() in Engineer
displays &quot;Salary of employee is 20000&quot;.
10) Hierarchical Inheritance
Write a Java program which creates a class named &#39;Employee&#39; having the following members: Name,
Age, Phone number, Address, Salary. It also has a method named &#39;printSalary( )&#39; which prints the
salary of the Employee. Two classes &#39;Officer&#39; and &#39;Manager&#39; inherits the &#39;Employee&#39; class. The &#39;Officer&#39;
and &#39;Manager&#39; classes have data members &#39;specialization&#39; and &#39;department&#39; respectively. Now, assign
name, age, phone number, address and salary to an officer and a manager by making an object of
both of these classes and print the same.
11) Abstract Class
Write a java program to create an abstract class named Shape that contains an empty method named
numberOfSides( ). Provide three classes named Rectangle, Triangle and Hexagon such that each
one of the classes extends the class Shape. Each one of the classes contains only the method
numberOfSides( ) that shows the number of sides in the given geometrical structures.
12) Multiple Inheritance using Interface
Create an interface ‘Sports’ which contains an interface variable sportWt set to value 6 and an
abstract method putWt(). 
Create a class ‘Student’ having member variable rollNumber and two methods getNumber(int n)
and putNumber() to read and display the rollNumber respectively.
Create a class ‘Test’ as the subclass of Student. It should contain two member variables ‘part1’ and
‘part2’ to hold the marks for each term. It should also contain methods getMarks(float m1,float m2)
and putMarks() to read and display the marks obtained for part1 and part2. 
Create a class ‘Results’ which derives the features of ‘Test’ class and ‘Sports’ interface. This class
should display the sportWt and should have a display() method to display the output in below format: 
RollNo:1234 
Marks Obtained 
Part1=27.5 
Part2=33 
SportsWt = 6 
Total Score=66.5 

13) Garbage Collection
Write a Java program to demonstrate the use of garbage collector.
14) Exception Handling 
Write a Java program that shows the usage of try, catch, throws and finally.

15) File Handling using FileInputStream and FileOutputStream classes
Write a Java program that reads from a file and writes to a file by handling all file related exceptions.
(Using FileInputStream and FileOutputStream classes) 

16) Read and Display File with Line Number
Write a Java program that reads a file and displays the file on the screen, with a line number before
each line.

17) File Handling using FileReader and FileWriter classes
Write a Java program using reader/writer class that displays the number of characters, lines and
words in a text file.

18) String Tokenizer
Write a Java program that reads a line of integers, and then displays each integer, and the
sum of all the integers (Use String Tokenizer class of java.util).

19) Doubly Linked List
Write a java program for the following:
1) Create a doubly linked list of elements.
2) Delete a given element from the above list.
3) Display the contents of the list after deletion.

20) Quick sort
Write a Java program that implements Quick sort algorithm for sorting a list of names in ascending
order.

21) Square and Cube of a Number using Thread Synchronization
Write a Java program that implements a multi-threaded program which has three threads. First thread
67generates a random integer every 1 second. If the value is even, second thread computes the
square of the number and prints. If the value is odd the third thread will print the value of cube of the
number. Use thread Synchronization.

22) Displaying odd and even number using MultiThreading
Write a Java program to create two threads: One for displaying all odd number between 1 and 100
and second thread for displaying all even numbers between 1 and 100.

23) Simple Calculator using Swing
Write a Java program that works as a simple calculator. Arrange Buttons for digits and the + - * %
operations properly. Add a text field to display the result. Handle any possible exceptions like divide
by zero. Use Java Swing.

24) Traffic Light Simulation using Swing
Write a Java program that simulates a traffic light. The program lets the user select one of three lights:
red, yellow, or green. When a radio button is selected, the light is turned on, and only one light can be
on at a time. No light is on when the program starts.
